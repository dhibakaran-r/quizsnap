{
    "category": "React",
    "level": "intermediate",
    "questions": [
      {
        "id": 1,
        "question": "What is the default value of 'state' in a React class component?",
        "options": [
          "null",
          "undefined",
          "an empty object",
          "a function"
        ],
        "correct_answer": "an empty object"
      },
      {
        "id": 2,
        "question": "Which method is used to update the state in a React class component?",
        "options": [
          "this.setState()",
          "this.updateState()",
          "this.state()",
          "this.refreshState()"
        ],
        "correct_answer": "this.setState()"
      },
      {
        "id": 3,
        "question": "What is a React Hook?",
        "options": [
          "A special function for lifecycle methods",
          "A function that allows you to use state and other React features in functional components",
          "A way to manage props",
          "A function for creating React components"
        ],
        "correct_answer": "A function that allows you to use state and other React features in functional components"
      },
      {
        "id": 4,
        "question": "What is the purpose of useEffect in React?",
        "options": [
          "To handle side effects in functional components",
          "To manage the state of the component",
          "To trigger re-renders based on changes in state",
          "To optimize performance"
        ],
        "correct_answer": "To handle side effects in functional components"
      },
      {
        "id": 5,
        "question": "Which hook is used to manage local component state in React functional components?",
        "options": [
          "useState",
          "useEffect",
          "useContext",
          "useReducer"
        ],
        "correct_answer": "useState"
      },
      {
        "id": 6,
        "question": "What is the purpose of the useContext hook in React?",
        "options": [
          "To provide context to a component tree",
          "To update state in class components",
          "To manage routing",
          "To handle side effects"
        ],
        "correct_answer": "To provide context to a component tree"
      },
      {
        "id": 7,
        "question": "Which method is used to bind event handlers in React?",
        "options": [
          "this.bind()",
          "this.setHandler()",
          "this.addEventListener()",
          "No need to bind, it is done automatically in React"
        ],
        "correct_answer": "No need to bind, it is done automatically in React"
      },
      {
        "id": 8,
        "question": "How do you prevent a component from re-rendering in React?",
        "options": [
          "By using shouldComponentUpdate() in class components",
          "By using useEffect() hook",
          "By using PureComponent",
          "By using memoization"
        ],
        "correct_answer": "By using shouldComponentUpdate() in class components"
      },
      {
        "id": 9,
        "question": "Which of the following is used to pass data from a parent component to a child component in React?",
        "options": [
          "Props",
          "State",
          "Event handlers",
          "useContext"
        ],
        "correct_answer": "Props"
      },
      {
        "id": 10,
        "question": "What will be the output of the following code?\n\nconst MyComponent = () => {\n  return <div>{}</div>;\n};",
        "options": [
          "null",
          "undefined",
          "Error",
          "Empty div"
        ],
        "correct_answer": "Empty div"
      },
      {
        "id": 11,
        "question": "What is JSX in React?",
        "options": [
          "A JavaScript XML extension",
          "A JavaScript function",
          "A stylesheet format",
          "A React package"
        ],
        "correct_answer": "A JavaScript XML extension"
      },
      {
        "id": 12,
        "question": "Which hook would you use to handle an asynchronous task in React?",
        "options": [
          "useState",
          "useEffect",
          "useReducer",
          "useContext"
        ],
        "correct_answer": "useEffect"
      },
      {
        "id": 13,
        "question": "What is the function of the key prop in React?",
        "options": [
          "It helps React identify which items have changed, are added, or are removed",
          "It is used to bind event handlers",
          "It is used to manage state",
          "It specifies the index of elements"
        ],
        "correct_answer": "It helps React identify which items have changed, are added, or are removed"
      },
      {
        "id": 14,
        "question": "What is the purpose of the useMemo hook in React?",
        "options": [
          "To memoize the result of a function",
          "To memoize the function itself",
          "To manage component state",
          "To trigger re-renders"
        ],
        "correct_answer": "To memoize the result of a function"
      },
      {
        "id": 15,
        "question": "What is the difference between componentDidMount() and useEffect() in React?",
        "options": [
          "useEffect() works in functional components, componentDidMount() works in class components",
          "componentDidMount() works in functional components, useEffect() works in class components",
          "componentDidMount() handles asynchronous tasks, useEffect() is for synchronous tasks",
          "There is no difference"
        ],
        "correct_answer": "useEffect() works in functional components, componentDidMount() works in class components"
      },
      {
        "id": 16,
        "question": "What is the significance of React's virtual DOM?",
        "options": [
          "It allows React to optimize DOM updates for better performance",
          "It is a new HTML language",
          "It is a replacement for the real DOM",
          "It makes React components faster"
        ],
        "correct_answer": "It allows React to optimize DOM updates for better performance"
      },
      {
        "id": 17,
        "question": "Which of the following can be used to store the global state in React?",
        "options": [
          "Context API",
          "State",
          "LocalStorage",
          "Props"
        ],
        "correct_answer": "Context API"
      },
      {
        "id": 18,
        "question": "What is the function of React Router?",
        "options": [
          "It helps in navigating between different views or pages in a React application",
          "It optimizes React components",
          "It handles state management",
          "It helps in managing asynchronous tasks"
        ],
        "correct_answer": "It helps in navigating between different views or pages in a React application"
      },
      {
        "id": 19,
        "question": "What is the purpose of useReducer in React?",
        "options": [
          "It is used to manage complex state logic in functional components",
          "It is used to optimize performance",
          "It is used for routing",
          "It manages state updates in class components"
        ],
        "correct_answer": "It is used to manage complex state logic in functional components"
      },
      {
        "id": 20,
        "question": "What is the purpose of React's StrictMode?",
        "options": [
          "To identify potential problems in an application during development",
          "To make components render faster",
          "To manage state updates",
          "To make React more efficient"
        ],
        "correct_answer": "To identify potential problems in an application during development"
      },
      {
        "id": 21,
        "question": "What is React.memo used for?",
        "options": [
          "To optimize performance by memoizing components",
          "To manage context in React",
          "To bind event handlers",
          "To define component lifecycle methods"
        ],
        "correct_answer": "To optimize performance by memoizing components"
      },
      {
        "id": 22,
        "question": "What is a controlled component in React?",
        "options": [
          "A component that controls its state using React's state management",
          "A component that controls the browser's DOM",
          "A component that manages its own lifecycle methods",
          "A component that handles user input without state"
        ],
        "correct_answer": "A component that controls its state using React's state management"
      },
      {
        "id": 23,
        "question": "How can you prevent a component from re-rendering unnecessarily in React?",
        "options": [
          "By using React.memo",
          "By using forceUpdate()",
          "By using componentWillUpdate()",
          "By using useEffect()"
        ],
        "correct_answer": "By using React.memo"
      },
      {
        "id": 24,
        "question": "What is the purpose of useRef hook in React?",
        "options": [
          "To persist values across renders without triggering re-renders",
          "To store state data in a function component",
          "To manage props",
          "To trigger lifecycle methods"
        ],
        "correct_answer": "To persist values across renders without triggering re-renders"
      },
      {
        "id": 25,
        "question": "Which method is used to render a component in React?",
        "options": [
          "ReactDOM.render()",
          "React.render()",
          "ReactComponent.render()",
          "React.createElement()"
        ],
        "correct_answer": "ReactDOM.render()"
      },
      {
        "id": 26,
        "question": "What is the significance of the 'key' prop in lists in React?",
        "options": [
          "It helps React identify which items have changed, been added, or removed",
          "It binds event handlers to the items",
          "It is used for performance optimization",
          "It stores the index of elements"
        ],
        "correct_answer": "It helps React identify which items have changed, been added, or removed"
      },
      {
        "id": 27,
        "question": "Which of the following is a lifecycle method in React?",
        "options": [
          "componentDidMount()",
          "getData()",
          "handleClick()",
          "render()"
        ],
        "correct_answer": "componentDidMount()"
      },
      {
        "id": 28,
        "question": "Which of the following is used for prop drilling in React?",
        "options": [
          "Passing props down through components",
          "Using React.memo",
          "Using React Router",
          "Using context API"
        ],
        "correct_answer": "Passing props down through components"
      },
      {
        "id": 29,
        "question": "How do you handle errors in React using hooks?",
        "options": [
          "By using error boundaries",
          "By using useError() hook",
          "By using try-catch inside useEffect()",
          "By using useReducer()"
        ],
        "correct_answer": "By using error boundaries"
      },
      {
        "id": 30,
        "question": "What does the 'render()' method do in a class component?",
        "options": [
          "It returns the JSX to be rendered to the DOM",
          "It triggers the component lifecycle",
          "It updates the state",
          "It binds event handlers"
        ],
        "correct_answer": "It returns the JSX to be rendered to the DOM"
      }
    ]
  }
  