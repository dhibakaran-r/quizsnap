{"version":3,"file":"static/js/12.a6bebd5a.chunk.js","mappings":"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","sources":["components/Dashboard.jsx","components/McqTest.jsx","components/McqInstructions.jsx","pages/QSUsers.jsx"],"sourcesContent":["import React from 'react'\nimport Greeting from './Greeting'\n\nfunction Dashboard() {\n  return (\n    <>\n      <Greeting />\n    </>\n  )\n}\n\nexport default Dashboard\n\n","import React, { useEffect, useState } from 'react'\nimport qes from '../assets/datas/questions.json'\nimport { LuClock12 } from \"react-icons/lu\";\nimport { FaHtml5 as Htmlic} from \"react-icons/fa\";\nimport { GrDocumentVerified } from \"react-icons/gr\";\nimport { toast, ToastContainer } from 'react-toastify';\n\nfunction McqTest() {\n\n    const [timeLeft, setTimeLeft] = useState(30 * 60);\n    const [isSubmit, setIsSubmit] = useState(false);\n\n    const formatTime = (seconds) => {\n            const minutes = Math.floor(seconds / 60);\n            const remainingSeconds = seconds % 60;\n            return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n          };\n    \n    useEffect(() => {\n        if (timeLeft > 0 && !isSubmit) {\n            const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n            return () => clearTimeout(timer); \n        } else if (timeLeft === 0) {\n            autoSubmit();\n        }\n    }, [timeLeft, isSubmit]);\n        \n\n    const autoSubmit = () =>{\n        setIsSubmit(true);\n        toast.success(\"Time's Up, Your test submitted!\", {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n            });\n    }\n    const manualSubmit = () =>{\n        setIsSubmit(true);\n        toast.success('Test Submitted Successfully!', {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n            });\n    }\n    return (\n        <div className='w-4/5 ms-16 p-16 flex flex-col gap-40 '>\n            {!isSubmit ? (<>\n                {qes.categories.map((que, i) => {return(\n                    <div className='flex flex-col gap-8'>\n                    <div className='w-full flex justify-between items-center bg-outlg p-8'>\n                            <div key={i} className='w-40 flex flex-row justify-center items-center gap-2'><Htmlic size={50} /> <span className='font-bold'>{que.category}</span></div>\n                            <div className='w-40 flex flex-row justify-center items-center gap-2 p-4 bg-secondary rounded-full text-redbg'><LuClock12 size={50} className='clockSpin' /> <span className='text-2xl font-bold'>{formatTime(timeLeft)}</span></div>\n                    </div>\n                        <div className='flex flex-col justify-around gap-16'>\n                            {/* if({que.levels === \"easy\"})  */}\n                            {\n                                \n                                que.levels.easy.map((q, i) => {return(\n                                \n                                    <div key={i} className='flex flex-col justify-around gap-4'>\n                                        <p className='text-xl'><span className='me-4'>{i+1}.</span>{q.question}</p>\n                                        <div className=' flex flex-wrap'>\n                                            {q.options.map((opt, id) => {return(\n                                                <div className=' h-8 flex justify-center items-center gap-2 ms-8'>\n                                                <input type='radio' key={id} id={opt} name={q.id} value={opt}/>\n                                                <label htmlFor={opt}>{opt}</label>\n                                            </div>\n\n                                            )})}\n                                        </div>\n                                    </div>\n\n                            )})\n                            }\n                        </div>\n                    </div>\n                )})}\n\n                <div className='flex justify-center items-center'>\n                    <button className=\"px-60 py-2 flex justify-center items-center gap-2 bg-secondary text-bluebg border rounded-md duration-200 hover:text-primary hover:bg-bluebg hover:border-primary\" \n                            onClick={ manualSubmit}\n                            >Submit</button>\n                   <ToastContainer position=\"top-center\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover theme=\"light\" />\n                </div>\n           \n            </>) : (<div className='bg-graylg w-full h-60 flex flex-col justify-around items-center rounded-md'>\n                        <div className='flex justify-center items-center gap-4 text-success'>\n                            <GrDocumentVerified size={80} /> \n                            <span className='font-bold text-2xl'>Test Submitted!</span>\n                        </div>\n                        <div className='flex justify-center items-center'>\n                            <button className=\"px-4 py-2 flex justify-center items-center gap-2 bg-secondary text-bluebg border rounded-md duration-200 hover:text-primary hover:bg-bluebg hover:border-primary\" \n                                    onClick={ \"\"}\n                                    >Show Result</button>\n                        </div>\n\n             </div>)}\n\n    </div>\n  )\n}\n\nexport default McqTest","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\n\nfunction McqInstructions() {\n\n    const {mcqid} = useParams();\n\n    return (\n    <>\n    <h1 className='flex justify-center items-center text-3xl text-textlg tracking-widest'>Welcome to the QuizSnap Challenge</h1>\n    <h2>{mcqid}</h2>\n  </>\n  )\n}\n\nexport default McqInstructions","import React from 'react';\nimport { Routes, Route } from 'react-router-dom' \nimport QSNav from '../components/QSNav';\nimport Dashboard from '../components/Dashboard';\nimport McqPage from '../components/McqPage';\nimport UserProfile from '../components/UserProfile';\nimport McqTest from '../components/McqTest';\nimport McqInstructions from '../components/McqInstructions';\n\nfunction QSUsers() {\n  \n  return (\n    <div>\n\n        <QSNav />\n        <section className='flex flex-col gap-24 ms-60 relative top-24'>\n          <Routes>\n              <Route path='/dashboard' element={<Dashboard/>} />\n              <Route path='/mcqs' element={<McqPage/>} />\n              <Route path='/testpage' element={<McqTest/>} />\n              <Route path='/instructions/:mcqid' element={<McqInstructions/>} />\n              <Route path='/userprofile' element={<UserProfile/>} />\n         \n          </Routes>\n        </section>\n\n    </div>\n  )\n}\n\nexport default QSUsers"],"names":["_jsx","_Fragment","children","Greeting","timeLeft","setTimeLeft","useState","isSubmit","setIsSubmit","formatTime","seconds","remainingSeconds","Math","floor","toString","padStart","useEffect","timer","setTimeout","clearTimeout","autoSubmit","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","className","_jsxs","GrDocumentVerified","size","onClick","qes","map","que","i","Htmlic","category","LuClock12","levels","easy","q","question","options","opt","id","type","name","value","htmlFor","manualSubmit","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","mcqid","useParams","QSNav","Routes","Route","path","element","Dashboard","McqPage","McqTest","McqInstructions","UserProfile"],"sourceRoot":""}